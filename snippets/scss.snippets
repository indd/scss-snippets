# Based on :
# http://sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html
# http://compass-style.org/reference/compass/
#
# =========================================
# Sass
# =========================================
#
# Define a variable
snippet v
$${1:name}: ${2:value};
${3}
# @extend - Selector Inheritance
snippet ex
@extend .${1:class};
${2}
# @mixin - Define a mixin
snippet mix
@mixin ${1:name} {
  ${2}
}
# @include - Use a mixin
snippet inc
@include ${1:mixin};
${2}
#
# SASS RGB Functions
#
# Converts an rgb(red, green, blue) triplet into a color.
snippet rgb
rgb(${1:red}, ${2:green}, ${3:blue})
${4}
# Converts an rgba(red, green, blue, alpha) quadruplet into a color.
snippet rgba
rgba(${1:red}, ${2:green}, ${3:blue}, ${4:alpha})
${5}
# Adds an alpha layer to any color value.
snippet rgbc
rgba(${1:color}, ${2:alpha})
${3}
# Gets the red component of a color.
snippet red
red(${1:color})
${2}
# Gets the green component of a color.
snippet gre
green(${1:color})
${2}
# Gets the blue component of a color.
snippet blu
blue(${1:color})
${2}
# Mixes two colors together.
snippet mixc
mix(${1:color1}, ${2:color2})
${3}
# Mixes two colors together (weighted)
snippet mixcw
mix(${1:color1}, ${2:color2}, ${3:weight})
${4}
#
# SASS HSL Functions
#
# Converts an hsl(hue, saturation, lightness) triplet into a color.
snippet hsl
hsl(${1:hue}, ${2:saturation}, ${3:lightness})
${4}
# Converts an hsla(hue, saturation, lightness, alpha) quadruplet into a color.
snippet hsla
hsla(${1:hue}, ${2:saturation}, ${3:lightness}, ${4:alpha})
${5}
# Gets the hue component of a color.
snippet hue
hue(${1:color})
${2}
# Gets the saturation component of a color.
snippet satc
saturation(${1:color})
${2}
# Gets the lightness component of a color.
snippet ligc
lightness(${1:color})
${2}
# Changes the hue of a color.
snippet adj
adjust-hue(${1:color}, ${2:degrees})
${3}
# Makes a color lighter.
snippet lig
lighten(${1:color}, ${2:amount})
${3}
# Makes a color darker.
snippet dar
darken(${1:color}, ${2:amount})
${3}
# Makes a color more saturated.
snippet sat
saturate(${1:color}, ${2:amount})
${3}
# Makes a color less saturated.
snippet des
desaturate(${1:color}, ${2:amount})
${3}
# Converts a color to grayscale.
snippet gra
grayscale(${1:color})
${2}
# Returns the complement of a color.
snippet com
complement(${1:color})
${2}
# Returns the inverse of a color.
snippet inv
invert(${1:color})
${2}
#
# SASS Opacity Functions
#
# Gets the alpha component (opacity) of a color.
snippet alp
alpha(${1:color})
${2}
# Add or change an alpha layer for any color value.
# - already defined, see 'rgbc'
# Makes a color more opaque.
snippet opa
opacify(${1:color}, ${2:amount})
${3}
# Makes a color more transparent.
snippet tra
transparentize(${1:color}, ${2:amount})
${3}
#
# Other Color Functions
#
# Increase or decrease any of the componens of a color
snippet ac
adjust-color(${1:color})
${2}
# Fluidly scale one or more components of a color
snippet sc
scale-color(${1:color})
${2}
# Changes one or more properties of a color
snippet cc
change-color(${1:color})
${2}
# Converts a color into the format understood by IE filters
snippet iehx
ie-hex-str($color)
${2}
#
# String Functions
#
snippet uq
unquote($string)
${1}
# Adds quotes to a string
snippet q
quote($string)
${1}
#
# Number Functions
#
# Converts a unitless number to a percentage.
snippet per
percentage(${1:value})
${2}
# Rounds a number to the nearest whole number.
snippet rou
round(${1:value})
${1}
# Rounds a number up to the nearest whole number.
snippet cei
ceil(${1:value})
${2}
# Rounds a number down to the nearest whole number.
snippet flo
floor(${1:value})
${2}
# Returns the absolute value of a number.
snippet abs
abs(${1:value})
${2}
# Finds the minumum of several values
snippet min
min(${1})
${2}
# Finds the maximum of several vaules
snippet max
max(${1})
${2}
#
# List Functions
#
# Returns the length of a list
snippet len
length(${1})
${2}
# Returns a specific item in a list
snippet nth
nth(${1})
${2}
# Joins together two lists into one
snippet join
join(${1})
${2}
# Appends a single value onto the end of a list
snippet app
append({1:list1}, ${2:val})
${3}
#
# Introspective Functions
#
# Returns the type of a value
snippet to
type-of($1})
${2}
# Returns the units associated with a number
snippet u
unit(${1})
${2}
# Returns whether a number has units or not
snippet uless
unitless(${1})
${2}
# Returns whether two lnumbers can be added or compared
snippet comp
comparable(${1:num1}, ${2:num2})
${3}
#
# Miscellaneous Function
#
# Returns one of two values, depending on whether or not a condition is true
snippet if
if(${1:condition}, ${2:if-true}, ${3:if-false})
${4}
#
# =========================================
# Compass Snippets
# =========================================
#
# Compass CSS3 Module Snippets
#
# Appearance
snippet @ap
@include appearance(${1:$ap});
${2}
# Background Clip
snippet $dbc
$default-background-clip
${1}
snippet @bgc
@include background-clip(${1:border-box}); 
${1}
# Background Origin
snippet $dbo
$default-background-origin
${1}
snippet @bgo
@include background-orgin(${1:content-box});
${2}
# Background Size
snippet $dbgs
$default-background-size
${1}
snippet @bgs
@include background-size(${1:size-1});
${2}
# Border Radius
snippet $dbr
$default-border-radius
${1}
snippet @br
@include border-radius(${1:0}, ${2:0}, ${3:0}, ${4:0});
${1}
snippet @bcr
@include border-corner-radius(${1:vert}, ${2:horz}, ${3:radius});
${4}
snippet @btlr
@include border-top-left-radius(${1});
${2}
snippet @btrr
@include border-top-right-radius(${1});
${2}
snippet @bblr
@include border-top-right-radius(${1});
${2}
snippet @bbrr
@include border-bottom-right-radius(${1});
${2}
snippet @btr
@include border-top-radius(${1});
${2}
snippet @brr
@include border-right-radius(${1});
${2}
snippet @blr
@include border-left-radius(${1});
${2}
# Box
snippet $dbo
$default-box-orient
${1}
snippet $dba
$default-box-align
${1}
snippet $dbf
$default-box-flex
${1}
snippet $dbfg
$default-box-flex-group
${1}
snippet $dbg
$default-box-ordinal-group
${1}
snippet $dbd
$default-box-direction
${1}
snippet $dbl
$default-box-lines
${1}
snippet $dbp
$default-box-pack
${1}
snippet @db
@include display-box;
${1}
snippet @bo
@include box-orient(${1:horizontal});
${1}
snippet @ba
@include box-align(${1:start});
${1}
snippet @bf
@include box-flex(${1:0});
${2}
snippet @bfg
@include box-flex-group(${1:group});
${2}
snippet @bd
@include box-direction(${1:normal});
${2}
snippet @bl
@include box-lines(${1:single})
${2}
snippet @bp
@include box-pack(${1:start});
${2}
# Box Shadow
snippet $dbsc
$default-box-shadow-color
${1}
snippet $dbsho
$default-box-shadow-h-offset
${1}
snippet $dbsvo
$default-box-shadow-v-offest
${1}
snippet $dbsb
$default-box-shadow-blur
${1}
snippet $dbss
$default-box-shadow-spread
${1}
snippet $dbsi
$default-box-shadow-inset
${1}
snippet @bs
@include box-shadow(${1:#333}, ${2:0px}, ${3:0px}, ${4:5px}, ${5:false}, ${6:false});
${7}
# Box Sizing
snippet @box-size
@include box-sizing(${1:border-box});
${2}
# CSS Regions
snippet @fi
@include flow-into(${1:target});
${2}
snippet @ff
@include flow-from(${1:target});
${2}
# Columns
snippet @c
@include columns(${1:20em} ${2:2});
${3}
snippet @cc
@include column-count(${1:2});
${2}
snippet @cg
@include column-gap(${1:20px});
${2}
snippet @cw
@include column-width(${1:40em});
${2}
snippet @crw
@include column-rule-width(${1:1px});
${2}
snippet @crs
@include column-rule-style(${1:solid});
${2}
snippet @crc
@include column-rule-color(${1:black});
${2}
snippet @cr
@include column-rule(${1:1px} ${2:solid} ${3:black});
${4}
snippet @cbb
@include column-break-before(${1:auto});
${2}
snippet @cba
@include column-break-after(${1:auto});
${2}
snippet @cbi
@include column-break-inside(${1:auto});
${2}
snippet @cb
@include column-break(${1:before}, ${2:auto});
${3}
# Filter
snippet @f
@include filter(${1});
${2}
# Font Face
snippet @ff
@include font-face(${1:name}, ${2:font-files}, ${3:false}, ${4:false}, ${5:false});
${6}
# Hyphenation
snippet @wb
@include word-break(${1:normal});
${2}
snippet @hs
@include hyphens(${1:auto});
${2}
snippet @h
@include hyphenation;
${1}
# Images
snippet @bg
@include background(${1});
${2}
snippet @bgfb
@include background-with-css2-fallback(${1});
${2}
snippet @bgi
@include background-image(${1});
${2}
snippet @fg
@include filter-gradient(${1:start-color}, ${2:end-color}, ${3:false});
${4}
snippet @bi
@include border-image(${1:value});
${2}
snippet @lsi
@include list-style-image(${1:image});
${2}
snippet @ls
@include list-style(${1:value});
${2}
snippet @con
@include content(${1:value});
${2}
# Opacity
snippet @o
@include opacity(${1:.5});
${2}
snippet @tran
@include transparent;
${2}
# Shared Utilities
snippet @ex
@include experimental(${1:property}, ${2:value});
${3}
snippet @exv
@include experimental(${1:property}, ${2:value});
${3}
# Text Shadow
snippet $dtsc
$default-text-shadow-color
${1}
snippet $dtsho
$default-text-shadow-h-offset
${1}
snippet $dtsvo
$default-text-shadow-v-offset
${1}
snippet $dtsb
$default-text-shadow-blur
${1}
snippet $dtss
$defalut-text-shadow-spread
${1}
snippet @ts
@include text-shadow(${1:#aaa}, ${2:0px}, ${3:0px}, ${4:1px}, ${5:false});
${6}
# Transform
snippet $dox
$default-origin-x
${1}
snippet $doy
$default-orgin-y
${1}
snippet $doz
$default-scale-z
${1}
snippet $dsx
$default-scale-x
${1}
snippet $dsy
$default-scale-y
${1}
snippet $dsz
$default-scale-z
${1}
snippet $dr
$default-rotate
${1}
snippet $dr
$default-rotate
${1}
snippet $dvx
$default-vector-x
${1}
snippet $dvy
$default-vector-y
${1}
snippet $dvz
$default-vector-z
${1}
snippet $dtx
$default-translate-x
${1}
snippet $dtz
$default-translate-z
${1}
snippet $dsx
$default-skew-x
${1}
snippet $dsy
$default-skew-y
${1}
snippet @ao
@include apply-orgin(${1:orgin-x}, ${2:orgin-y}, ${3:orgin-z}, ${4:3D-only});
${5}
snippet @to
@include transform-orgin(${1:orgin-x}, ${2:orgin-y}, ${3:orgin-z}, ${4:3D-only});
${5}
snippet @t
@include transform(${1:transform}, ${2:3D-only});
${3}
snippet @t2d
@include transform2d(${1:transform});
${2}
snippet @t3d
@include transform3d(${1:transform});
${2}
snippet @p
@include perspective(${1:perspective});
${2}
snippet @po
@include perspective(${1:origin});
${2}
snippet @t-style
@include transform-style(${1:preserve-3d});
${2}
snippet @bfv
@include backgace-visibility(${1:visable});
${2}
snippet @scale
@include scale(${1:scale-x}, ${2:scale-y}, ${3:perspective}, ${4:3D-only});
${5}
snippet @scalex
@include scaleX(${1:scale}, ${2:perspective}, ${3:3D-only});
${4}
snippet @scaley
@include scaleY(${1:scale}, ${2:perspective}, ${3:3D-only});
${4}
snippet @scalez
@include scaleZ(${1:scale}, ${2:perspective}, ${3:3D-only});
${4}
snippet @scale3d
@include scale3d(${1:scale-x}, ${2:scale-y}, ${3:scale-z}, ${4:perspective});
${5}
snippet @rot
@include rotate(${1:rotate}, ${2:perspective}, ${3:3D-only});
${4}
snippet @rotz
@include rotateZ(${1:rotate}, ${2:perspective}, ${3:3D-only});
${4}
snippet @rotx
@include rotateX(${1:rotate}, ${2:perspective});
${3}
snippet @roty
@include rotateY(${1:rotate}, ${2:perspective});
${3}
snippet @rot3d
@include rotate3d(${1:vector-x}, ${2:vector-y}, ${3:vector-z}, ${4:rotate}, ${5:perspective});
${6}
snippet @trans
@include translate(${1:translate-x}, ${2:translate-y}, ${3:perspective}, ${4:3D-only});
${5}
snippet @transx
@include translateX(${1:trans-x}, ${2:perspective}, ${3:3D-only});
${4}
snippet @transy
@include translateY(${1:trans-y}, ${2:perspective}, ${3:3D-only});
${4}
snippet @transz
@include translateZ(${1:trans-z}, ${2:perspective});
${3}
snippet @trans3d
@include translate3d(${1:translate-x}, ${2:translate-y}, ${3:translate-z}, ${4:perspective});
${5}
snippet @skew
@include skew(${1:skew-x}, ${2:skew-y}, ${3:3D-only});
${4}
snippet @skewx
@include skewX(${1:skew-x}, ${2:3D-only});
${3}
snippet @skewy
@include skewY(${1:skew-y}, $2:3D-only});
${3}
snippet @ctrans
@include create-transform(${1});
${2}
snippet @strans
@include simple-transform(${1});
${2}
snippet @cl
@include comma-list(${1:list});
${2}
snippet @pft
@include prefixed-for-transition(${1:prefix}, ${2:property});
${3}
snippet @it
@include is-time(${1:value});
${2}
snippet @tp
@include transition-property(${1});
${2}
snippet @td
@include transition-duration(${1});
${2}
snippet @ttf
@include transition-timing-function(${1});
${2}
snippet @tdel
@include transition-delay(${1});
${2}
snippet @st
@include single-transition(${1});
${2}
# Transition
snippet $dtp
$default-transition-property
${1}
snippet $dtd
$default-transition-duration
${1}
snippet $dtf
$default-transition-function
${1}
snippet $dtd
$default-transition-delay
${1}
snippet $tpv
$transitionable-prefixed-values
${1}
snippet c-l
comma-list(${1})
${2}
snippet p-f-t
prefixed-for-transition(${1}, ${2})
${3}
snippet i-t
is-time(${1})
${2}
snippet transi-p
@include transition-property(${1});
${2}
snippet transi-d
@include transition-duration(${1});
${2}
snippet transi-tf
@include transition-timing-function(${1});
${2}
snippet transi-d
@include transition-delay(${1});
${2}
snippet s-transi
@include single-transition(${1});
${2}
snippet @transi
@include transition(${1});
${2}
#
# Compass Typography Module Snippets
#
# Vertical Rhythm
snippet $bfs
$base-font-size
${1}
snippet $blh
$base-line-height
${1}
snippet $drbs
$default-rhythm-border-style
${1}
snippet $rfs
$relative-font-size
${1}
snippet $rtnhl
$round-to-nearest-half-line
${1}
snippet $mlp
$min-line-padding
${1}
snippet $fu
$font-unit
${1}
snippet $bdfs
$browser-default-font-size
${1}
snippet $bru
$base-rhythm-unit
${1}
snippet $bl
$base-leader
${1}
snippet $bhl
$base-half-leader
${1}
snippet @ru
relative-unit(${1});
${2}
snippet @au
absolute-unit(${1});
${2}
snippet @R
rhythm(${1});
${2}
snippet @lffs
lines-for-font-size(${1});
${2}
snippet @eb
@include establish-baseline(${1});
${2}
snippet @rb
@include reset-baseline;
${1}
snippet @dva
@include debug-vertical-alignment(${1});
${2}
snippet @afst
@include adjust-font-size-t(${1});
${2}
snippet @alt
@include adjust-leading-to(${1});
${2}
snippet @l
@include leader(${1});
${2}
snippet @pl
@include padding-leader(${1});
${2}
snippet @ml
@include margin-leader(${1});
${2}
snippet @t
@include trailer(${1});
${2}
snippet @pt
@include padding-trailer(${1});
${2}
snippet @mt
@include margin-trailer(${1});
${2}
snippet @r
@include rhythm(${1});
${2}
snippet @asrb
@include apply-side-rhythm-border(${1});
${2}
snippet @rbo
@inlcude rhythm-border($});
${2}
snippet @lb
@include leading-border(${1});
{2}
snippet @tb
@inlcude trailing-border(${1});
${2}
snippet @hb
@include horizontal-borders({$});
${2}
#
# Helpers
#
# Color 
snippet @al
@include adjust-lightness(${1:color}, ${2:amount});
${2}
snippet @as
@include adjust-saturation(${1:color}, ${2:amount});
${3}
snippet @sl
@include scale-lightness(${1:color}, ${2:amount});
${3}
snippet @ss
@include scale-saturation(${1:color}, ${2:amount});
${3}
snippet @sh
@include shade(${1:color}, ${2:%});
${3}
snippet @ti
@include tint(${color}, ${2:%});
${3}
# Constants
snippet @op
@include opposite-position(${1});
{2}
# Display
snippet @eot
@include elements-of-type(${1:disply});
${2}
# Font Files
snippet @f-f
@include font-files(${1});
${2}
# Image Dimensions
snippet @iw
@include iage-width(${1});
${2}
snippet @ih
@include image-height(${1});
${2}
# Inline Data
snippet @ii
@include inline-image(${1});
${2}
snippet @iff
@include inline-font-files(${1}, ${2});
{3}
# Math
snippet pi
pi()
${1}
snippet sin
sin(${1})
${1}
snippet cos
cos(${1})
${2}
snippet tan
tan(${1})
${2}
snippet e
e()
${1}
snippet log
log(${1})
${2}
snippet sqrt 
sqrt(${1})
${2}
snippet pow
pow(${1:number}, ${2:exponent});
${3}
# Selectors
snippet nest
nest(${1})
${2}
snippet aps
append-selector(${1})
${2}
snippet headers
headers($}{1})
${2}
# URLS
snippet s-u
stylesheet-url(${1})
${2}
snippet f-u
font-url(${1})
${2}
snippet i-u
image-url(${1})
${2}
snippet g-i-u
generated-image-url(${1:path}, ${2:false})
${3}
# Grid
snippet $gbcc
$grid-background-column-color: rgba(${1}, ${2}, ${3}, ${4});
${5}
snippet $gbgc
$grid-background-gutter-color: rgba(${1}, ${2}, ${3}, ${4});
${5}
snippet $gbtc
$grid-background-total-columns: ${1};
${2}
snippet $gbcw
$grid-background-column-width: ${1};
${2}
snippet $gbgw
$grid-background-gutter-width: ${1};
${2}
snippet $gbo
$grid-background-offset: ${1};
${2}
snippet $bggc
$grid-background-baseline-color: rgba(${1}, ${2}, ${3}, ${4});
${5}
snippet $gbbh
$grid-background-baseline-height: ${1};
${2}
snippet $scgb
$show-column-grid-backgrounds: ${1:true};
${2}
snippet $sbgb
$show-baseline-grid-backgrounds: ${1:true};
${2}
snippet $sgb
$show-grid-backgrounds: ${1:true};
${2}
snippet $gbff
$grid-background-force-fluid: ${1:false};
${2}
snippet gbg
get-baseline-gradient(${1});
${2}
snippet bgb
build-grid-background(${1});
${2}
snippet gcg
get-column-gradient(${1});
${2}
snippet gcfg
get-column-fluid-grid(${1});
${2}
snippet @bgb
@include baseline-grid-background(${1});
${2}
snippet @cgb
@include column-grid-background(${1});
${2}
snippet @gb
@include grid-background(${1});
${2}
# Sprites
snippet $ss
$sprite-selectors
${1}
snippet $dmss
$disable-magic-sprite-selectors
${1}
snippet @sd
@include sprite-dimensions(${1:map}, ${2:sprite});
${2}
snippet @sbp
@include sprite-background-position(${1});
${2}
snippet @s
@include sprite(${1});
${2}
snippet @sps
@include sprites(${1});
${2}
snippet @sm
@include sprite-map(${1});
${2}
snippet @smn
@include sprite-map-name(${1:map});
${2}
snippet @sf
@include sprite-file(${1}, ${2});
{3}
snippet @su
@include sprite-url(${1:map});
${2}
snippet @sp
@include sprite-position(${1});
${2}
#
